version: "3.5"

services:
  api01: &api
    # Lembre-se de que seu serviço HTTP deve estar hospedado num repositório
    # publicamente acessível! Ex.: hub.docker.com
    image: rinha2
    hostname: api01
    environment:
      - DB_HOSTNAME=db
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
      nproc:
        soft: 65535
        hard: 65535

    # Não é necessário expor qualquer porta além da porta do load balancer,
    # mas é comum as pessoas o fazerem para testarem suas APIs e conectarem
    # ao banco de dados na fase de desenvolvimento.
    ports:
      - "8081:8080"
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: "0.6"
          memory: "400MB"

  api02:
    # Essa sintaxe reusa o que foi declarado em 'api01'.
    <<: *api
    hostname: api02
    environment:
      - DB_HOSTNAME=db
    ports:
      - "8082:8080"

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
      nproc:
        soft: 65535
        hard: 65535
    ports:
      # Obrigatório expor/usar a porta 9999 no load balancer!
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "100MB"

  db:
    image: postgres
    environment:
      POSTGRES_DB: rinha
      POSTGRES_USER: galo
      POSTGRES_PASSWORD: brigamuito
      PG_MAX_WAL_SIZE: '2GB'        # Increases the maximum size of WAL files before triggering a checkpoint
      PG_MIN_WAL_SIZE: '1GB'        # Sets the minimum size of WAL files
      PG_CHECKPOINT_TIMEOUT: '10min' # Increases the time between automatic WAL checkpoints
      PG_WORK_MEM: '64MB'           # Sets the amount of memory used for query operations like sorts and hashes
      PG_MAINTENANCE_WORK_MEM: '128MB' # Sets the maximum amount of memory for maintenance operations, such as vacuuming
      PG_EFFECTIVE_CACHE_SIZE: '2GB' # Advises the planner on how much memory is available for caching data
      PG_SHARED_BUFFERS: '512MB'    # Sets the amount of memory the database server uses for shared memory buffers
      PG_MAX_CONNECTIONS: '40'     # Adjusts the maximum number of concurrent connections
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 256M
    volumes:
      - ./initialize.sql:/docker-entrypoint-initdb.d/initialize.sql

# O uso do modo `bridge` deve ser adequado à carga que será usada no teste.
# A edição anterior se beneficiou do modo host pois o volume de requisições
# era relativamente alto e a virtualização da rede se tornou um gargalo, mas
# este modo é mais complexo de ser configurado. Fique à vontade para usar o
# modo que quiser desde que não conflite com portas trivialmente usadas em um
# SO.
networks:
  default:
    driver: bridge
    name: rinha-nginx-2024q1
